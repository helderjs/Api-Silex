<?php

namespace Api\Test\Sms\Controller;

use Doctrine\Common\DataFixtures\Executor\ORMExecutor;
use Doctrine\Common\DataFixtures\Loader;
use Doctrine\Common\DataFixtures\Purger\ORMPurger;
use Silex\WebTestCase;

class MessageControllerTest extends WebTestCase
{
    /**
     * @var Client
     */
    protected $client = null;

    public function createApplication()
    {
        $app = require __DIR__ . '/../../../../../src/app.php';
        require __DIR__ . '/../../../../../config/database.php';
        require __DIR__ . '/../../../../../config/dev.php';

        return $app;
    }

    public function setUp()
    {
        parent::setUp();

        $connection = $this->app['orm.em']->getConnection();
        $connection->query('SET FOREIGN_KEY_CHECKS=0');

        $dir = $this->app['app.root'] . DIRECTORY_SEPARATOR . "tests" . DIRECTORY_SEPARATOR . "fixtures";
        $loader = new Loader();
        $loader->loadFromDirectory($dir);
        $fixtures = $loader->getFixtures();

        $purger = new ORMPurger($this->app['orm.em']);
        $purger->setPurgeMode(ORMPurger::PURGE_MODE_TRUNCATE);
        $executor = new ORMExecutor($this->app['orm.em'], $purger);
        $executor->execute($fixtures);
        $connection->query('SET FOREIGN_KEY_CHECKS=1');

        $this->client = $this->createClient();
    }

    public function testSend()
    {
        $sms = [
            'ddd' => '71',
            'number' => '91898583',
            'message' => 'Message generated by unit test.',
            'signature' => 'Unit Test Controller',
            'category' => 1,
        ];
        $this->client->request('POST', "/sms/?key=4072041796f364e7e1fdea3ce9fb835dbe41b559", $sms);
        $this->assertTrue($this->client->getResponse()->isOk());
        $response = json_decode($this->client->getResponse()->getContent(), true);

        unset($sms['category']);
        foreach ($sms as $key => $value) {
            $this->assertEquals($value, $response[$key]);
        }
        $this->assertEquals(6, $response['id']);
        $this->assertEquals('SD', $response['status']);
        $this->assertEquals('out', $response['type']);
        $this->assertEquals('Conectta SMS', $response['gateway']);
        $this->assertEquals('default', $response['category']);

        // Com usuário de simulação
        $this->client->request('POST', "/sms/?key=7c4a8d09ca3762af61e59520943dc26494f8941b", $sms);
        $this->assertTrue($this->client->getResponse()->isOk());
        $response = json_decode($this->client->getResponse()->getContent(), true);

        foreach ($sms as $key => $value) {
            $this->assertEquals($value, $response[$key]);
        }
        $this->assertEquals(7, $response['id']);
        $this->assertEquals('out', $response['type']);
        $this->assertEquals('Zombie SMS', $response['gateway']);
        $this->assertEquals('default', $response['category']);
    }

    public function testStatus()
    {
        $sms = [
            'id' => 1,
            'ddd' => '71',
            'number' => '91898583',
            'message' => 'Message generated by unit test.',
            'signature' => 'Unit Test Controller',
            'category' => 'default',
            'gateway' => 'Conectta SMS',
            'status' => 'ST',
            'type' => 'out',
        ];
        $this->client->request('GET', "/sms/1?key=4072041796f364e7e1fdea3ce9fb835dbe41b559");
        $this->assertTrue($this->client->getResponse()->isOk());
        $response = json_decode($this->client->getResponse()->getContent(), true);
        foreach ($sms as $key => $value) {
            $this->assertEquals($value, $response[$key]);
        }
    }

    public function testResponse()
    {
        $expected = [
            [
                'id' => 4,
                'ddd' => '71',
                'number' => '88971306',
                'message' => 'Response message test generated 1.',
                'signature' => 'Unit Test Controller',
                'status' => 'ST',
                'type' => 'in',
                'gateway' => 'Conectta SMS',
                'category' => 'default',
            ],
            [
                'id' => 5,
                'ddd' => '71',
                'number' => '91853435',
                'message' => 'Response message test generated 2.',
                'signature' => 'Unit Test Controller',
                'status' => 'ST',
                'type' => 'in',
                'gateway' => 'Conectta SMS',
                'category' => 'default',
            ],
        ];

        $this->client->request('GET', "/sms/1/response?key=4072041796f364e7e1fdea3ce9fb835dbe41b559");
        $this->assertTrue($this->client->getResponse()->isOk());
        $response = json_decode($this->client->getResponse()->getContent(), true);

        $this->assertCount(2, $response);
        foreach ($response as $id => $sms) {
            foreach ($sms as $key => $value) {
                $this->assertEquals($value, $response[$id][$key]);
            }
        }
    }
}
